apply plugin: 'com.android.library'
apply plugin: 'kotlin-android'

Properties properties = new Properties()
properties.load(project.rootProject.file('switch.properties').newDataInputStream())

def ENABLE_EXTERNAL_LOG = properties.get('ENABLE_EXTERNAL_LOG')
def LOG_ENABLE = properties.get('LOG_ENABLE')

def CHANNEL = System.getProperty("channel", "default")

android {
    compileSdkVersion COMPILE_SDK_VERSION as int
    buildToolsVersion BUILD_TOOLS_VERSION as String

    defaultConfig {
        minSdkVersion MIN_SDK_VERSION as int
        targetSdkVersion TARGET_SDK_VERSION as int
        versionCode APP_VERSION_CODE as int
        versionName APP_VERSION_NAME as String

        testInstrumentationRunner "android.support.test.runner.AndroidJUnitRunner"
        externalNativeBuild {
            cmake {
                cppFlags ""
            }
        }

        buildConfigField("boolean", "LOG_ENABLE", "${LOG_ENABLE}")
        buildConfigField("String", "CHANNEL", "\"${CHANNEL}\"")
    }
    buildTypes {
        release {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
        }
    }
    publishNonDefault true
    flavorDimensions "default"
    productFlavors {
        demo {
            dimension "default"
            buildConfigField("boolean", "DEMO_MODE", "true")
            buildConfigField("boolean", "ENABLE_EXTERNAL_LOG", "true")
            buildConfigField("String", "SERVER_WALLPAPER_ENDPOINT", "\"${DEMO_API_WALLPAPER_ENDPOINT}\"")
            buildConfigField("String", "AUTHORITY", "\"${FREE_VERSUIB_AUTHORITY}\"")
            resValue("string", "authority", "\"${FREE_VERSUIB_AUTHORITY}\"")
        }
        production {
            dimension "default"
            buildConfigField("boolean", "DEMO_MODE", "false")
            buildConfigField("boolean", "ENABLE_EXTERNAL_LOG", "${ENABLE_EXTERNAL_LOG}")
            buildConfigField("String", "SERVER_WALLPAPER_ENDPOINT", "\"${PRODUCTION_API_WALLPAPER_ENDPOINT}\"")
            buildConfigField("String", "AUTHORITY", "\"${FREE_VERSUIB_AUTHORITY}\"")
            resValue("string", "authority", "\"${FREE_VERSUIB_AUTHORITY}\"")
        }
        ultimate {
            dimension "default"
            buildConfigField("boolean", "DEMO_MODE", "false")
            buildConfigField("boolean", "ENABLE_EXTERNAL_LOG", "${ENABLE_EXTERNAL_LOG}")
            buildConfigField("String", "SERVER_WALLPAPER_ENDPOINT", "\"${PRODUCTION_API_WALLPAPER_ENDPOINT}\"")
            buildConfigField("String", "AUTHORITY", "\"${ULTIMATE_VERSUIB_AUTHORITY}\"")
            resValue("string", "authority", "\"${ULTIMATE_VERSUIB_AUTHORITY}\"")
        }
    }
    compileOptions {
        sourceCompatibility 1.8
        targetCompatibility 1.8
    }
    externalNativeBuild {
        cmake {
            path "CMakeLists.txt"
        }
    }
}

dependencies {
    implementation fileTree(dir: 'libs', include: ['*.jar'])
    implementation "com.android.support:appcompat-v7:${SUPPORT_LIBRARY_VERSION}"
    implementation "org.jetbrains.kotlin:kotlin-stdlib:${KOTLIN_VERSION}"
    implementation "org.jetbrains.anko:anko-common:${ANKO_VESION}"
    implementation "org.jetbrains.anko:anko-sqlite:${ANKO_VESION}"
    implementation "com.google.code.gson:gson:${GSON_VERSION}"
    implementation "com.squareup.okhttp3:okhttp:${OK_HTTP_VERSION}"
    api project(':domain')

    androidTestCompile('com.android.support.test.espresso:espresso-core:2.2.2', {
        exclude group: 'com.android.support', module: 'support-annotations'
    })
    testCompile 'junit:junit:4.12'
}
